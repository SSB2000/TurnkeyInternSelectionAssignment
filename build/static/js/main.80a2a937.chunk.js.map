{"version":3,"sources":["Components/PersonInfo.js","Components/PersonForm.js","services/person.js","Components/Notification.js","App.js","index.js"],"names":["PersonInfo","person","handleDelete","name","number","type","onClick","id","PersonForm","props","onSubmit","addPerson","placeholder","value","newName","onChange","handleNameAddition","newNumber","handleNumberAddition","baseUrl","request","axios","get","getAll","then","response","data","createPerson","personObject","post","deletePerson","delete","updateNumber","put","Notification","message","className","App","useState","persons","setPersons","setNewName","setNewNumber","setMessage","messageType","setMessageType","useEffect","personService","initialPersons","catch","err","console","log","toDelete","find","window","confirm","filter","setTimeout","event","target","preventDefault","newPersonObject","alert","duplicatePerson","updatedPerson","returnedPerson","map","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80a2a937.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function PersonInfo({ person, handleDelete }) {\r\n    return (\r\n        <li>\r\n            {person.name}: {person.number}\r\n            <button \r\n                type=\"submit\"\r\n                onClick={() => handleDelete(person.id)}\r\n            >\r\n            Delete\r\n            </button>\r\n        </li>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function PersonForm(props) {\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.addPerson}>\r\n                <h2>Add new</h2>\r\n                <div>\r\n                    name:{\" \"}\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your name..\"\r\n                        value={props.newName}\r\n                        onChange={props.handleNameAddition}\r\n                    />\r\n                    <br />\r\n                    number:{\" \"}\r\n                    <input\r\n                        type=\"tel\"\r\n                        placeholder=\"Enter your number..\"\r\n                        value={props.newNumber}\r\n                        onChange={props.handleNumberAddition}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/people\";\r\n\r\nconst getAll = () => {\r\n    return request.then((response) => response.data);\r\n};\r\nconst request = axios.get(baseUrl);\r\n\r\nconst createPerson = (personObject) => {\r\n    const request = axios.post(baseUrl, personObject);\r\n    return request.then((response) => response.data);\r\n};\r\n\r\nconst deletePerson = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`);\r\n};\r\n\r\nconst updateNumber = (person) => {\r\n    const request = axios.put(`${baseUrl}/${person.id}`, person);\r\n    return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, createPerson, deletePerson, updateNumber };\r\n","import React from 'react'\r\n\r\nexport default function Notification({message, type}) {\r\n\treturn (\r\n\t\t<div \r\n\t\t\tclassName={type}\r\n\t\t>\r\n\t\t{message}\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport PersonInfo from \"./Components/PersonInfo\";\nimport PersonForm from \"./Components/PersonForm\";\nimport personService from \"./services/person\";\nimport person from \"./services/person\";\nimport \"./index.css\";\nimport Notification from \"./Components/Notification\";\n// import Search from \"./Components/Search\";\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState(\"\");\n    const [newNumber, setNewNumber] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [messageType, setMessageType] = useState(\"\");\n    const hook = () => {\n        personService\n            .getAll()\n            .then((initialPersons) => setPersons(initialPersons))\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    useEffect(hook, []);\n\n    const addPerson = (event) => {\n        event.preventDefault();\n        const newPersonObject = {\n            name: newName,\n            number: newNumber,\n        };\n        if (persons.find((person) => person.name === newName)) {\n            alert(\n                `${newName} already exists in the phonebook. Replace the old number with new one?`\n            );\n            const duplicatePerson = persons.find(\n                (person) => person.name === newName\n            );\n            const updatedPerson = { ...duplicatePerson, number: newNumber };\n            personService\n                .updateNumber(updatedPerson)\n                .then((returnedPerson) => {\n                    setPersons(\n                        persons.map((person) =>\n                            person.name !== newName ? person : returnedPerson\n                        )\n                    );\n                })\n                .catch((err) => {\n                    setMessage(`${newName} does not exists in the phonebook.`);\n                    setMessageType(\"error\");\n                    setTimeout(() => {\n                        setMessage(null);\n                        setMessageType(null);\n                        setNewName(\"\");\n                        setNewNumber(\"\");\n                    }, 4000);\n                });\n\n            return;\n        }\n\n        personService\n            .createPerson(newPersonObject)\n            .then((returnedPerson) => {\n                setPersons(persons.concat(returnedPerson));\n            })\n            .then(() => {\n                setMessage(`${newName} is added!`);\n                setMessageType(\"success\");\n                setTimeout(() => {\n                    setMessage(null);\n                    setMessageType(null);\n                }, 4000);\n            });\n\n        // setPersons(persons.concat(newPersonObject));\n        setNewName(\"\");\n        setNewNumber(\"\");\n    };\n\n    const handleNameAddition = (event) => {\n        const name = event.target.value;\n        setNewName(name);\n    };\n\n    const handleNumberAddition = (event) => {\n        setNewNumber(event.target.value);\n    };\n\n    const handleDelete = (id) => {\n        const toDelete = persons.find((person) => person.id === id);\n        if (window.confirm(`Delete ${toDelete.name} ?`)) {\n            personService\n                .deletePerson(id)\n                .then(() => {\n                    setPersons(persons.filter((person) => person.id !== id));\n                })\n                .then(() => {\n                    setMessage(`${toDelete.name} is deleted!`);\n                    setMessageType(\"success\");\n                    setTimeout(() => {\n                        setMessage(null);\n                        setMessageType(null);\n                    }, 4000);\n                })\n                .catch((err) => {\n                    setMessage(`${toDelete.name} was already deleted!`);\n                    setMessageType(\"success\");\n                    setTimeout(() => {\n                        setMessage(null);\n                        setMessageType(null);\n                    }, 4000);\n                    setPersons(person.filter((person) => person.id !== id));\n                });\n        }\n    };\n\n    return (\n        <div>\n            <h1>Phonebook</h1>\n            <Notification message={message} type={messageType} />\n            {/* <Search persons={persons} /> */}\n            <PersonForm\n                newName={newName}\n                handleNameAddition={handleNameAddition}\n                newNumber={newNumber}\n                handleNumberAddition={handleNumberAddition}\n                addPerson={addPerson}\n            />\n            <h2>Numbers</h2>\n            <ul>\n                {persons.map((person) => (\n                    <PersonInfo\n                        key={person.id}\n                        person={person}\n                        handleDelete={handleDelete}\n                    />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}